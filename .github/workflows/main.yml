name: Deploy demo holbox BE to EC2
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to EC2
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            set -e
            REPO_DIR="demo-backend"
            if [ -d "\$REPO_DIR/.git" ]; then
              echo "Repo exists, pulling latest changes..."
              cd \$REPO_DIR
              git reset --hard
              git clean -fd
              git pull origin main
            else
              echo "Cloning repo..."
              git clone git@github.com:HolboxAI/demo-backend.git
              cd \$REPO_DIR
            fi
            # Write .env file with all secrets
            echo "OPENAI_API_KEY=\$OPENAI_API_KEY" > .env
            echo "AWS_ACCESS_KEY_ID=\$AWS_ACCESS_KEY_ID" >> .env
            echo "AWS_SECRET_ACCESS_KEY=\$AWS_SECRET_ACCESS_KEY" >> .env
            echo "AWS_DEFAULT_REGION=\$AWS_DEFAULT_REGION" >> .env
            echo "AWS_ACCOUNT_ID=\$AWS_ACCOUNT_ID" >> .env
            # Set up and activate virtual environment
            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            # Kill any existing uvicorn processes (optional safety)
            pkill -f "uvicorn" || true
            # Run the app with uvicorn
            nohup uvicorn app:app --host 0.0.0.0 --port 8000 --reload > app.log 2>&1 &
          EOF
